'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var md5 = _interopDefault(require('md5-hash'));
var React = _interopDefault(require('react'));

var colors = [{
  1: "#723d46",
  2: "#e5383b"
}, {
  1: "#FB8500",
  2: "#1D1D1D"
}, {
  1: "#1d3557",
  2: "#943C9C"
}, {
  1: "#FD9E02",
  2: "#2d6a4f"
}, {
  1: "#0DD4C4",
  2: "#242423"
}, {
  1: "#FB8500",
  2: "#3a0ca3"
}, {
  1: "#1D9CD4",
  2: "#2d00f7"
}, {
  1: "#057C5D",
  2: "#6a00f4"
}, {
  1: "#3d405b",
  2: "#f94144"
}];

var getValidSeed = function getValidSeed(name) {
  var hash = md5(name);
  var seed = String(hash.replace(/\D/g, '')); // console.log('seed' + seed)

  return seed;
}; // Getting index level 1


var getColorObject = function getColorObject(dig_one) {
  var index1;
  index1 = dig_one >= 8 ? 8 : dig_one + 1; // console.log('index' + index1)

  return colors[index1];
}; // Getting index level 2


var getExactColor = function getExactColor(dig_one, dig_two) {
  var index2;
  var binaryValue = dig_two.toString(2) == 0 ? 0 : dig_two.toString(2);
  var colorObject = getColorObject(dig_one); // console.log('colorObje' + colorObject[1])

  if (binaryValue == 0) {
    index2 = 1;
  } else {
    index2 = binaryValue[0] && binaryValue[1] ? Number(binaryValue[0]) + Number(binaryValue[1]) : binaryValue; // console.log('index2' + Number(binaryValue[2]))
  }

  return colorObject[index2];
};

var returnColors = function returnColors(name) {
  var seed = getValidSeed(name);

  if (seed.length <= 1) {
    return {
      bg: "#FFFFFF",
      front: "#0D4D8C"
    };
  } else {
    var dig_one = Number(seed[0]);
    var dig_two = Number(seed[1]); // console.log('digOne' + dig_one)

    var color = getExactColor(dig_one, dig_two);

    if (dig_one >= dig_two) {
      return {
        bg: "#FFFFFF",
        front: color
      };
    } else {
      return {
        bg: color,
        front: "#FFFFFF"
      };
    }
  }
};

var Avatar = function Avatar(_ref) {
  var name = _ref.name,
      size = _ref.size,
      rounded = _ref.rounded;
  var colors = returnColors(name ? name : 'default');
  return React.createElement("svg", {
    width: size ? size : 80,
    viewBox: "0 0 25 25",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, React.createElement("rect", {
    width: "25",
    height: "25",
    fill: "" + colors.bg,
    rx: "" + (rounded ? "15" : "0")
  }), React.createElement("path", {
    d: "M12 11.796C14.7189 11.796 16.9231 9.60308 16.9231 6.89801C16.9231 4.19294 14.7189 2.00005 12 2.00005C9.28106 2.00005 7.07692 4.19294 7.07692 6.89801C7.07692 9.60308 9.28106 11.796 12 11.796Z",
    fill: colors.front
  }), React.createElement("path", {
    d: "M14.5641 13.8369H9.4359C6.46154 13.8369 4 16.2859 4 19.245C4 19.9593 4.30769 20.5716 4.92308 20.8777C5.84615 21.3879 7.89744 22.0001 12 22.0001C16.1026 22.0001 18.1538 21.3879 19.0769 20.8777C19.5897 20.5716 20 19.9593 20 19.245C20 16.1838 17.5385 13.8369 14.5641 13.8369Z",
    fill: colors.front
  }));
};

exports.default = Avatar;
//# sourceMappingURL=react-hot-avatars.cjs.development.js.map
