{"version":3,"file":"react-hot-avatars.cjs.development.js","sources":["../src/utils/colors.tsx","../src/utils/colorCombination.tsx","../src/Avatar.tsx"],"sourcesContent":["export const colors: any = [\n    { //0\n        1: \"#723d46\",\n        2: \"#e5383b\",\n    },\n    {  //1\n        1: \"#FB8500\",\n        2: \"#1D1D1D\",\n    },\n    {  //2  \n        1: \"#1d3557\",\n        2: \"#943C9C\",\n    },\n    {  //3\n        1: \"#FD9E02\",\n        2: \"#2d6a4f\",\n    },\n    {  //4\n        1: \"#0DD4C4\",\n        2: \"#242423\",\n\n    },\n    {  //5\n        1: \"#FB8500\",\n        2: \"#3a0ca3\",\n\n    },\n    {  //6\n        1: \"#1D9CD4\",\n        2: \"#2d00f7\",\n\n    },\n    {   //7\n        1: \"#057C5D\",\n        2: \"#6a00f4\",\n\n    },\n    {  //8\n        1: \"#3d405b\",\n        2: \"#f94144\",\n    }\n]\n\n","import * as colors from './colors';\nimport md5 from 'md5-hash'\n\n// Get a valid seed\nconst getValidSeed = (name: any) => {\n    let hash = md5(name)\n    let seed = String(hash.replace(/\\D/g, ''))\n    // console.log('seed' + seed)\n\n    return seed;\n}\n\n// Getting index level 1\nconst getColorObject = (dig_one: any) => {\n    let index1;\n    index1 = dig_one >= 8 ? 8 : dig_one + 1;\n    // console.log('index' + index1)\n    return colors.colors[index1];\n}\n\n// Getting index level 2\nconst getExactColor = (dig_one: any, dig_two: any) => {\n    let index2;\n    let binaryValue = dig_two.toString(2) == 0 ? 0 : dig_two.toString(2);\n    let colorObject = getColorObject(dig_one);\n    // console.log('colorObje' + colorObject[1])\n    if (binaryValue == 0) {\n        index2 = 1;\n    } else {\n        index2 = (binaryValue[0] && binaryValue[1]) ? Number(binaryValue[0]) + Number(binaryValue[1]) : binaryValue;\n        // console.log('index2' + Number(binaryValue[2]))\n    }\n\n    return colorObject[index2];\n}\n\nexport const returnColors = (name: any) => {\n    let seed = getValidSeed(name);\n    if (seed.length <= 1) {\n        return { bg: \"#FFFFFF\", front: \"#0D4D8C\" };\n    } else {\n        let dig_one = Number(seed[0]);\n        let dig_two = Number(seed[1]);\n\n        // console.log('digOne' + dig_one)\n\n        let color = getExactColor(dig_one, dig_two);\n        if (dig_one >= dig_two) {\n            return { bg: \"#FFFFFF\", front: color };\n        } else {\n            return { bg: color, front: \"#FFFFFF\" }\n        }\n    }\n}","import * as colorCombinator from './utils/colorCombination';\nimport React, { FC } from 'react';\n\nexport type AvatarType = {\n    name?: String;\n    size?: string;\n    rounded?: boolean;\n};\nexport const Avatar: FC<AvatarType> = ({ name, size, rounded }) => {\n    let colors = colorCombinator.returnColors(name ? name : 'default');\n\n    return (\n        <svg width={size ? size : 80} viewBox=\"0 0 25 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"25\" height=\"25\" fill={`${colors.bg}`} rx={`${rounded ? \"15\" : \"0\"}`}></rect>\n            <path d=\"M12 11.796C14.7189 11.796 16.9231 9.60308 16.9231 6.89801C16.9231 4.19294 14.7189 2.00005 12 2.00005C9.28106 2.00005 7.07692 4.19294 7.07692 6.89801C7.07692 9.60308 9.28106 11.796 12 11.796Z\" fill={colors.front} />\n            <path d=\"M14.5641 13.8369H9.4359C6.46154 13.8369 4 16.2859 4 19.245C4 19.9593 4.30769 20.5716 4.92308 20.8777C5.84615 21.3879 7.89744 22.0001 12 22.0001C16.1026 22.0001 18.1538 21.3879 19.0769 20.8777C19.5897 20.5716 20 19.9593 20 19.245C20 16.1838 17.5385 13.8369 14.5641 13.8369Z\" fill={colors.front} />\n        </svg>\n    );\n};\n"],"names":["colors","getValidSeed","name","hash","md5","seed","String","replace","getColorObject","dig_one","index1","getExactColor","dig_two","index2","binaryValue","toString","colorObject","Number","returnColors","length","bg","front","color","Avatar","size","rounded","colorCombinator","React","width","viewBox","fill","xmlns","height","rx","d"],"mappings":"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"}