{
  "version": 3,
  "sources": ["../../scriptjs/dist/script.js", "../../react-twitter-embed/src/components/twiter-widget-url.ts", "../../react-twitter-embed/src/components/TwitterTimelineEmbed.tsx", "../../react-twitter-embed/src/components/TwitterShareButton.tsx", "../../react-twitter-embed/src/components/TwitterFollowButton.tsx", "../../react-twitter-embed/src/components/TwitterHashtagButton.tsx", "../../react-twitter-embed/src/components/TwitterMentionButton.tsx", "../../react-twitter-embed/src/components/TwitterTweetEmbed.tsx", "../../react-twitter-embed/src/components/TwitterMomentShare.tsx", "../../react-twitter-embed/src/components/TwitterDMButton.tsx", "../../react-twitter-embed/src/components/TwitterVideoEmbed.tsx", "../../react-twitter-embed/src/components/TwitterOnAirButton.tsx"],
  "sourcesContent": ["/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      fn(el)\n      return 1\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n", "const twitterWidgetJs = 'https://platform.twitter.com/widgets.js';\n\nexport default twitterWidgetJs;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterTimelineEmbedBase {\n  /**\n   * Additional options to pass to twitter widget plugin\n   */\n  options?: JSONObject;\n  /**\n   * Automatically fit into parent container height\n   */\n  autoHeight?: boolean;\n  /**\n   * With dark or light theme\n   */\n  theme?: 'dark' | 'light';\n  /**\n   * With custom link colors. Note: Only Hex colors are supported.\n   */\n  linkColor?: string;\n  /**\n   * With custom border colors. Note: Only Hex colors are supported.\n   */\n  borderColor?: string;\n  /**\n   * Hide the header from timeline\n   */\n  noHeader?: boolean;\n  /**\n   * Hide the footer from timeline\n   */\n  noFooter?: boolean;\n  /**\n   * Hide the border from timeline\n   */\n  noBorders?: boolean;\n  /**\n   * Hide the scrollbars\n   */\n  noScrollbar?: boolean;\n  /**\n   * Enable Transparancy\n   */\n  transparent?: boolean;\n  /**\n   * Custom language code. Supported codes here: https://developer.twitter.com/en/docs/twitter-for-websites/twitter-for-websites-supported-languages/overview.html\n   */\n  lang?: string;\n  /**\n   * ariaPolite\n   */\n  ariaPolite?: 'polite' | 'assertive' | 'rude';\n  /**\n   * Limit of tweets to be shown\n   */\n  tweetLimit?: number;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nexport interface TwitterTimelineEmbedSourceScreenName\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of profile, likes\n   */\n  sourceType: 'profile' | 'likes';\n  /**\n   * username of twitter handle as String\n   */\n  screenName: string;\n}\n\nexport interface TwitterTimelineEmbedSourceUserId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of profile, likes\n   */\n  sourceType: 'profile' | 'likes';\n  /**\n   * UserId of twitter handle as number\n   */\n  userId: string;\n}\n\nexport interface TwitterTimelineEmbedSourceTimeline\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of timeline\n   */\n  sourceType: 'timeline';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string;\n}\n\nexport interface TwitterTimelineEmbedSourceTimelineWidget\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of timeline\n   */\n  sourceType: 'timeline';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  widgetId: string;\n}\n\nexport interface TwitterTimelineEmbedSourceList\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of list\n   */\n  sourceType: 'list';\n  /**\n   * To show list, used along with slug\n   */\n  ownerScreenName: string;\n  /**\n   * To show list, used along with ownerScreenName\n   */\n  slug: string;\n}\n\nexport interface TwitterTimelineEmbedSourceListId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be either of list\n   */\n  sourceType: 'list';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string | number;\n}\n\nexport interface TwitterTimelineEmbedSourceCollectionId\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be collection\n   */\n  sourceType: 'collection';\n  /**\n   * To show list, unique list id\n   * Also used with collections, in that case its valid collection id\n   */\n  id: string | number;\n}\n\nexport interface TwitterTimelineEmbedSourceCollectionUrl\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be collection\n   */\n  sourceType: 'collection';\n  /**\n   * To show list, unique list url\n   * Also used with collections, in that case its valid collection id\n   */\n  url: string;\n}\n\nexport interface TwitterTimelineEmbedSourceUrl\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be url\n   */\n  sourceType: 'url';\n  /**\n   * To show twitter content with url.\n   * Supported content includes profiles, likes, lists, and collections.\n   */\n  url: string;\n}\n\nexport interface TwitterTimelineEmbedSourceWidget\n  extends TwitterTimelineEmbedBase {\n  /**\n   * This can be widget\n   */\n  sourceType: 'widget';\n  /**\n   * To show custom widget\n   */\n  widgetId: string;\n}\n\nexport type TwitterTimelineEmbedPropsType =\n  | TwitterTimelineEmbedSourceScreenName\n  | TwitterTimelineEmbedSourceUserId\n  | TwitterTimelineEmbedSourceTimeline\n  | TwitterTimelineEmbedSourceTimelineWidget\n  | TwitterTimelineEmbedSourceList\n  | TwitterTimelineEmbedSourceListId\n  | TwitterTimelineEmbedSourceCollectionId\n  | TwitterTimelineEmbedSourceCollectionUrl\n  | TwitterTimelineEmbedSourceUrl\n  | TwitterTimelineEmbedSourceWidget;\n\n// export interface TwitterTimelineEmbedProps {\n//   sourceType: 'profile' | 'likes' | 'list' | 'collection' | 'URL' | 'widget'\n//   url: string;\n//   options?: JSONObject,\n//   placeholder?: string | React.ReactNode;\n//   onLoad?: (element: any) => void;\n// };\n\nconst methodName = 'createTimeline';\n\nconst TwitterTimelineEmbed = (props: TwitterTimelineEmbedPropsType): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  const buildOptions = () => {\n    let options = Object.assign({}, props.options);\n    if (props?.autoHeight) {\n      options.height = (ref.current?.parentNode as HTMLElement)?.offsetHeight;\n    }\n\n    options = Object.assign({}, options, {\n      theme: props?.theme,\n      linkColor: props?.linkColor,\n      borderColor: props?.borderColor,\n      lang: props?.lang,\n      tweetLimit: props?.tweetLimit,\n      ariaPolite: props?.ariaPolite\n    });\n\n    return options;\n  };\n\n  const buildChromeOptions = (options: JSONObject) => {\n    options.chrome = '';\n    if (props.noHeader) {\n      options.chrome = options.chrome + ' noheader';\n    }\n    if (props.noFooter) {\n      options.chrome = options.chrome + ' nofooter';\n    }\n    if (props.noBorders) {\n      options.chrome = options.chrome + ' noborders';\n    }\n    if (props.noScrollbar) {\n      options.chrome = options.chrome + ' noscrollbar';\n    }\n    if (props.transparent) {\n      options.chrome = options.chrome + ' transparent';\n    }\n\n    return options;\n  };\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        let options = buildOptions();\n        /** Append chrome options */\n        options = buildChromeOptions(options);\n\n        window.twttr.widgets[methodName](\n          {\n            // @ts-ignore\n            sourceType: props.sourceType,\n            // @ts-ignore\n            screenName: props.screenName,\n            // @ts-ignore\n            userId: props.userId,\n            // @ts-ignore\n            ownerScreenName: props.ownerScreenName,\n            // @ts-ignore\n            slug: props.slug,\n            // @ts-ignore\n            id: props.id || props.widgetId,\n            // @ts-ignore\n            url: props.url\n          },\n          ref?.current,\n          options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterTimelineEmbed;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterShareButtonProps {\n  /**\n   * Url for sharing\n   */\n  url: string;\n  /**\n   * Additional options for overriding config. Details at : https://dev.twitter.com/web/tweet-button/parameters\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createShareButton';\n\nconst TwitterShareButton = (props: TwitterShareButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.url,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterShareButton;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterFollowButtonProps {\n  /**\n   * Username of twitter user which will be followed on click\n   */\n  screenName: string;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createFollowButton';\n\nconst TwitterFollowButton = (props: TwitterFollowButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.screenName,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterFollowButton;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterHashtagButtonProps {\n  /**\n   * Tag name for hashtag button\n   */\n  tag: string;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createHashtagButton';\n\nconst TwitterHashtagButton = (props: TwitterHashtagButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.tag,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterHashtagButton;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterMentionButtonProps {\n  /**\n   * Username to which you will need to tweet\n   */\n  screenName: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createMentionButton';\n\nconst TwitterMentionButton = (props: TwitterMentionButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.screenName,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterMentionButton;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterTweetEmbedProps {\n  /**\n   * Tweet id that needs to be shown\n   */\n  tweetId: string;\n  /**\n   * Additional options to pass to twitter widget plugin\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createTweet';\n\nconst TwitterTweetEmbed = (props: TwitterTweetEmbedProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.tweetId,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterTweetEmbed;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterMomentShareProps {\n  /**\n   * id of Twitter moment to show\n   */\n  momentId: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createMoment';\n\nconst TwitterMomentShare = (props: TwitterMomentShareProps) => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.momentId,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterMomentShare;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterDMButtonProps {\n  /**\n   * Twitter user id for DM button\n   */\n  id: number;\n  /**\n   * Additional options to be added to the button\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createDMButton';\n\nconst TwitterDMButton = (props: TwitterDMButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.id,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          if (isComponentMounted) {\n            setLoading(false);\n            if (props.onLoad) {\n              props.onLoad(element);\n            }\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterDMButton;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\nexport interface TwitterVideoEmbedProps {\n  /**\n   * Id of video tweet.\n   */\n  id: string;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createVideo';\n\nconst TwitterVideoEmbed = (props: TwitterVideoEmbedProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](props.id, ref?.current).then(\n          (element: any) => {\n            setLoading(false);\n            if (props.onLoad) {\n              props.onLoad(element);\n            }\n          }\n        );\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterVideoEmbed;\n", "import React from 'react';\nimport twitterWidgetJs from './twiter-widget-url';\n\ndeclare global {\n  interface Window {\n    twttr: any;\n  }\n}\n\ninterface JSONObject {\n  [k: string]: any;\n}\n\nexport interface TwitterOnAirButtonProps {\n  /**\n   * Username for which you require periscope on air button\n   */\n  username: string;\n  /**\n   * Additional options for overriding config.\n   */\n  options?: JSONObject;\n  /**\n   * Placeholder while tweet is loading\n   */\n  placeholder?: string | React.ReactNode;\n  /**\n   * Function to execute after load, return html element\n   */\n  onLoad?: (element: any) => void;\n}\n\nconst methodName = 'createPeriscopeOnAirButton';\n\nconst TwitterOnAirButton = (props: TwitterOnAirButtonProps): any => {\n  const ref = React.useRef<HTMLDivElement | null>(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    let isComponentMounted = true;\n    const script = require('scriptjs');\n    script(twitterWidgetJs, 'twitter-embed', () => {\n      if (!window.twttr) {\n        console.error('Failure to load window.twttr, aborting load');\n        return;\n      }\n      if (isComponentMounted) {\n        if (!window.twttr.widgets[methodName]) {\n          console.error(\n            `Method ${methodName} is not present anymore in twttr.widget api`\n          );\n          return;\n        }\n\n        window.twttr.widgets[methodName](\n          props.username,\n          ref?.current,\n          props.options\n        ).then((element: any) => {\n          setLoading(false);\n          if (props.onLoad) {\n            props.onLoad(element);\n          }\n        });\n      }\n    });\n\n    // cleaning up\n    return () => {\n      isComponentMounted = false;\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <React.Fragment>{props.placeholder}</React.Fragment>}\n      <div ref={ref} />\n    </React.Fragment>\n  );\n};\n\nexport default TwitterOnAirButton;\n"],
  "mappings": "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",
  "names": []
}
